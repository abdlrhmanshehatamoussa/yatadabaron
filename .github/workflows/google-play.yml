name: deploy-flutter-googleplay-fastlane

on:
  push:
    tags:
      - "test@*@*"
      - "production@*@*"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extracting Lane, Version and Build Number
        id: gitinfo
        run: |
          tag_name=${GITHUB_REF##*/}
          tag_name_splitted=(${tag_name//@/ })
          echo Tag Name=${tag_name}
          lane=${tag_name_splitted[0]}
          version=${tag_name_splitted[1]}
          buildNumber=${tag_name_splitted[2]}
          echo lane=$lane, version=$version, build_number=$buildNumber
          echo "::set-output name=lane::$lane"
          echo "::set-output name=version::$version"
          echo "::set-output name=buildNumber::$buildNumber"

      - name: Preparing Secret Keys
        id: gitsecrets
        run: |
          lane=${{steps.gitinfo.outputs.lane}}
          lane=${lane^^}
          echo "::set-output name=CLOUDHUB_API_URL::${lane}_CLOUDHUB_API_URL"
          echo "::set-output name=CLOUDHUB_CLIENT_KEY::${lane}_CLOUDHUB_CLIENT_KEY"
          echo "::set-output name=CLOUDHUB_CLIENT_SECRET::${lane}_CLOUDHUB_CLIENT_SECRET"
          echo "::set-output name=TAFSEER_SOURCES_URL::${lane}_TAFSEER_SOURCES_URL"
          echo "::set-output name=TAFSEER_TEXT_URL::${lane}_TAFSEER_TEXT_URL"

      - name: Creating Keystore file
        run: |
          cd android  
          cd app
          keyFile=key.jks
          gpg -d --passphrase "${{ secrets.GPG_PASS }}" --batch $keyFile.asc > $keyFile

          cd ../
          keyPropFile=key.properties
          touch $keyPropFile
          echo keyAlias=${{ secrets.GOOGLE_PLAY_KEYSTORE_ALIAS }}>$keyPropFile
          echo keyPassword=${{ secrets.GOOGLE_PLAY_KEYSTORE_KEY_PASSWORD }}>>$keyPropFile
          echo storePassword=${{ secrets.GOOGLE_PLAY_KEYSTORE_STORE_PASSWORD }}>>$keyPropFile
          echo storeFile=$keyFile>>$keyPropFile

      - name: Creating Version file
        run: |
          pwd
          cd android
          verPropFile=version.properties
          touch $verPropFile
          echo flutter.versionName=${{steps.gitinfo.outputs.version}}>$verPropFile
          echo flutter.versionCode=${{steps.gitinfo.outputs.buildNumber}}>>$verPropFile

      - name: Creating Google Services file
        run: |
          pwd
          cd android
          cd app
          file=google-services.json
          gpg -d --passphrase "${{ secrets.GPG_PASS }}" --batch $file.asc > $file

      - name: Creating Fastlane Secret file
        run: |
          pwd
          cd android
          file=fastlane-secret.json
          gpg -d --passphrase "${{ secrets.GPG_PASS }}" --batch $file.asc > $file

      - name: Creating .env file
        run: |
          pwd
          cd assets
          touch .env
          echo CLOUDHUB_API_URL="${{secrets[steps.gitsecrets.outputs.CLOUDHUB_API_URL]}}">.env
          echo CLOUDHUB_CLIENT_KEY="${{secrets[steps.gitsecrets.outputs.CLOUDHUB_CLIENT_KEY]}}">>.env
          echo CLOUDHUB_CLIENT_SECRET="${{secrets[steps.gitsecrets.outputs.CLOUDHUB_CLIENT_SECRET]}}">>.env
          echo TAFSEER_SOURCES_URL="${{secrets[steps.gitsecrets.outputs.TAFSEER_SOURCES_URL]}}">>.env
          echo TAFSEER_TEXT_URL="${{secrets[steps.gitsecrets.outputs.TAFSEER_TEXT_URL] }}">>.env

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Fastlane dependencies
        run: |
          pwd
          cd android
          bundle install

      - name: Testing Fastlane installation
        run: |
          pwd
          cd android
          bundle exec fastlane run validate_play_store_json_key

      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.10.3"

      - name: Build
        run: |
          pwd
          cd android
          flutter clean
          flutter build apk --release

      - name: Deploy
        run: |
          pwd
          cd android
          lane=${{steps.gitinfo.outputs.lane}}
          bundle exec fastlane $lane
